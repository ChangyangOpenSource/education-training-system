import md5 from"../utils/md5";import request from"../utils/request";import store from"../../store/index";import regeneratorRuntime from"../regenerator-runtime/runtime-module";function resortParam(t){const e=Object.keys(t).filter(t=>"sign"!==t).sort();let r="";return e.forEach(e=>{r+=`${e}${t[e]}`}),r}function getSign(t,e){const r={...t},n=resortParam(t);return r.sign=md5(`plyMinApp${n}plyMinApp`).toUpperCase(),request(e,{qs:r})}function getSecretSign(t,e){const r=resortParam(t);return md5(`${e}${r}${e}`).toUpperCase()}const pRequest=async(t,e,r)=>{if(!r){const{apiId:t,apiSecret:r,verifyUrl:n}=store.get("app");for(const o in e)if(("qs"===o||"body"===o)&&e[o]){const s={...e[o]};if(s.appId=t,s.timestamp=Date.now(),n){const t=await getSign(s,n);s.sign=t.data.data.sign}else s.sign=getSecretSign(s,r);e[o]=s}}return request(t,e)};export default pRequest;